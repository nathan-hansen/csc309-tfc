{"swagger": "2.0", "info": {"title": "CSC309 TFC Project Backend", "description": "Built by Letian Cheng, Nathan Hansen, Edward Leung", "version": "v1"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/accounts/api/token/refresh/": {"post": {"operationId": "accounts_api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/login/": {"post": {"operationId": "accounts_login_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/signup/": {"post": {"operationId": "accounts_signup_create", "description": "Allows a user to register on the website.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/update/": {"put": {"operationId": "accounts_update_update", "description": "Allows a user to update their account details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Account"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "patch": {"operationId": "accounts_update_partial_update", "description": "Allows a user to update their account details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Account"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/{account_id}/": {"get": {"operationId": "accounts_read", "description": "View a given account.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "parameters": [{"name": "account_id", "in": "path", "required": true, "type": "string"}]}, "/classes/modify/": {"post": {"operationId": "classes_modify_create", "description": "Allows a user to enrol or drop a class.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["classes"]}, "parameters": []}, "/classes/{studio_id}/schedule/": {"get": {"operationId": "classes_schedule_list", "description": "Allows a user to view their upcoming enrolled classes in chronological order.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EnrollClass"}}}}, "tags": ["classes"]}, "parameters": [{"name": "studio_id", "in": "path", "required": true, "type": "string"}]}, "/classes/{studio_id}/upcoming/": {"get": {"operationId": "classes_upcoming_list", "description": "List upcoming classes in a given studio.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ClassTimeTable"}}}}, "tags": ["classes"]}, "parameters": [{"name": "studio_id", "in": "path", "required": true, "type": "string"}]}, "/payments/add/": {"post": {"operationId": "payments_add_create", "description": "Allows a user to register their credit card details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentInfo"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PaymentInfo"}}}, "tags": ["payments"]}, "parameters": []}, "/payments/history/": {"get": {"operationId": "payments_history_list", "description": "Allows a user to view all their past payments on file.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PaymentHistory"}}}}, "tags": ["payments"]}, "parameters": []}, "/payments/upcoming/": {"get": {"operationId": "payments_upcoming_list", "description": "Allows a user to view their next upcoming payment, the payment interval, and the end date of the recurrence.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["payments"]}, "parameters": []}, "/payments/update/": {"put": {"operationId": "payments_update_update", "description": "Allows a user to alter their credit card details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PaymentInfo"}}}, "tags": ["payments"]}, "patch": {"operationId": "payments_update_partial_update", "description": "Allows a user to alter their credit card details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PaymentInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PaymentInfo"}}}, "tags": ["payments"]}, "parameters": []}, "/studios/list/{latitude},{longitude}": {"get": {"operationId": "studios_list_read", "description": "List Studios by proximity, with optional search and filter capability via parameters.\nNeeds latitude and longitude values passed through the URL to operate.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Studio"}}}}, "tags": ["studios"]}, "parameters": [{"name": "latitude", "in": "path", "required": true, "type": "string"}, {"name": "longitude", "in": "path", "required": true, "type": "string"}]}, "/studios/{studio}/": {"get": {"operationId": "studios_read", "description": "View Studio information given a Studio ID.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Studio"}}}, "tags": ["studios"]}, "parameters": [{"name": "studio", "in": "path", "required": true, "type": "string"}]}, "/studios/{studio}/amenities/": {"get": {"operationId": "studios_amenities_list", "description": "View Amenities given a Studio ID.\nIntended for use in tandem with StudioView\nfor a comprehensive look at a studio.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Amenities"}}}}, "tags": ["studios"]}, "parameters": [{"name": "studio", "in": "path", "required": true, "type": "string"}]}, "/studios/{studio}/images/": {"get": {"operationId": "studios_images_list", "description": "View StudioImages given a Studio ID.\nIntended for use in tandem with StudioView\nfor a comprehensive look at a studio.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/StudioImage"}}}}, "tags": ["studios"]}, "parameters": [{"name": "studio", "in": "path", "required": true, "type": "string"}]}, "/subscriptions/subscribe/": {"post": {"operationId": "subscriptions_subscribe_create", "description": "Allows a user to subscribe. Prerequisites:\n- This account does not have a subscription \n(or a previously cancelled subscription - in which case the UpdateView should instead be used.)\n- This account has registered payment information\n\nThis method creates:\n- a CurrentSubscription entry for this user\n- an entry in PaymentHistory logging this transaction", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CurrentSubscription"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CurrentSubscription"}}}, "tags": ["subscriptions"]}, "parameters": []}, "/subscriptions/update/": {"put": {"operationId": "subscriptions_update_update", "description": "Allows a user to change their subscription plan to either a) another existing plan, or b) null (a cancellation).\nIf a user changes to a non-null subscription plan, the newer expiry date is used.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CurrentSubscription"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CurrentSubscription"}}}, "tags": ["subscriptions"]}, "patch": {"operationId": "subscriptions_update_partial_update", "description": "Allows a user to change their subscription plan to either a) another existing plan, or b) null (a cancellation).\nIf a user changes to a non-null subscription plan, the newer expiry date is used.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CurrentSubscription"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CurrentSubscription"}}}, "tags": ["subscriptions"]}, "parameters": []}}, "definitions": {"TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "Account": {"required": ["username"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "phone_number": {"title": "Phone number", "type": "string", "pattern": "^\\+?1?\\d{9,15}$", "maxLength": 250, "x-nullable": true}}}, "ClassTimeTable": {"required": ["time", "spotleft"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "time": {"title": "Time", "type": "string", "format": "date-time"}, "spotleft": {"title": "Spotleft", "type": "integer"}, "class_detail": {"title": "Class detail", "type": "string", "readOnly": true}}}, "EnrollClass": {"required": ["account", "classtime"], "type": "object", "properties": {"account": {"$ref": "#/definitions/Account"}, "classtime": {"$ref": "#/definitions/ClassTimeTable"}, "class_detail": {"title": "Class detail", "type": "string", "readOnly": true}}}, "PaymentInfo": {"required": ["name_on_card", "card_number", "cvv", "expiry_date"], "type": "object", "properties": {"account": {"title": "Account", "type": "string", "readOnly": true}, "name_on_card": {"title": "Name on card", "type": "string", "maxLength": 250, "minLength": 1}, "card_number": {"title": "Card number", "type": "string", "maxLength": 250, "minLength": 1}, "cvv": {"title": "Cvv", "type": "integer"}, "expiry_date": {"title": "Expiry date", "type": "string", "format": "date"}}}, "PaymentHistory": {"required": ["account", "timestamp", "amount", "card_number", "card_expiry"], "type": "object", "properties": {"account": {"title": "Account", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "amount": {"title": "Amount", "type": "number"}, "card_number": {"title": "Card number", "type": "string", "maxLength": 250, "minLength": 1}, "card_expiry": {"title": "Card expiry", "type": "string", "format": "date"}}}, "Studio": {"required": ["name", "address", "latitude", "longitude", "postal_code", "phone_number"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 250, "minLength": 1}, "address": {"title": "Address", "type": "string", "maxLength": 250, "minLength": 1}, "latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}, "postal_code": {"title": "Postal code", "type": "string", "maxLength": 250, "minLength": 1}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 250, "minLength": 1}}}, "Amenities": {"required": ["studio", "amenity_type", "quantity"], "type": "object", "properties": {"studio": {"title": "Studio", "type": "integer"}, "amenity_type": {"title": "Amenity type", "type": "string", "maxLength": 250, "minLength": 1}, "quantity": {"title": "Quantity", "type": "integer"}}}, "StudioImage": {"required": ["studio"], "type": "object", "properties": {"studio": {"title": "Studio", "type": "integer"}, "image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}}}, "CurrentSubscription": {"type": "object", "properties": {"account": {"title": "Account", "type": "string", "readOnly": true}, "plan": {"title": "Plan", "type": "integer", "x-nullable": true}, "expiration": {"title": "Expiration", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}}}